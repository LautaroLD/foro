import { PrismaClient } from '@prisma/client'
import { withAccelerate } from '@prisma/extension-accelerate'
import slugify from 'slugify'

const extendedPrismaClient = new PrismaClient()
  .$extends(withAccelerate())
  .$extends({
    model: {
      $allModels: {
        async createWithSlug(args: { data: { name?: string; slug?: string } }) {
          if (args.data.name) {
            args.data.slug = slugify(args.data.name, {
              lower: true,
              strict: true,
            })
          }
          // @ts-expect-error The types generated by Prisma do not include the custom `createWithSlug` method.
          return this.create(args)
        },
        async updateWithSlug(args: { data: { name?: string; slug?: string } }) {
          if (args.data.name) {
            args.data.slug = slugify(args.data.name, {
              lower: true,
              strict: true,
            })
          }
          // @ts-expect-error The types generated by Prisma do not include the custom `updateWithSlug` method.
          return this.update(args)
        },
      },
    },
  })

declare global {
  // eslint-disable-next-line no-var
  var prisma: typeof extendedPrismaClient | undefined
}

const prisma = global.prisma || extendedPrismaClient

if (process.env.NODE_ENV !== 'production') {
  global.prisma = prisma
}

export default prisma
